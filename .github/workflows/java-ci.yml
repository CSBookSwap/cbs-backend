name: Java CI

on:
  push:
    branches:
      - dev
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  id-token: write

jobs:

  tests:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Install dependencies
        run: ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

      - name: Run tests and collect coverage
        run: ./mvnw -B test

      - name: Uploading Test results
        uses: actions/upload-artifact@v3.1.3
        with:
          name: test_results
          path: ./target/surefire-reports/TEST-*.xml

      - name: Uploading Coverage results
        uses: actions/upload-artifact@v3.1.3
        with:
          name: coverage_results
          path: ./target/site/jacoco/jacoco.xml

      - name: Tree
        run: tree -L 3
        
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: CBS Tests
          path: 'target/surefire-reports/TEST-*.xml'
          reporter: java-junit

      - name: Merge with main
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push' && success()
        run: |
          git fetch --all
          git branch -a
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git checkout main
          git merge --allow-unrelated-histories dev
          git push origin main
  

  #      - name: Merge with main
  #        if: github.ref == 'refs/heads/dev' && github.event_name == 'push' && success()
  #        run: |
  #          git checkout main
  #          git merge dev
  #          git push origin main
  

  build_report:

    runs-on: ubuntu-latest
    needs: [ tests ]

    steps:
      - name: Loading Test results
        uses: actions/download-artifact@v3.0.2
        with:
          name: test_results

  upload_coverage:
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - name: Loading Coverage results
        uses: actions/download-artifact@v3.0.2
        with:
          name: coverage_results

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}